{
  "catalogs": {
    "jooq": {
      "catalog-ref": "https://github.com/jooq/jbang-catalog/blob/HEAD/jbang-catalog.json"
    },
    "rodnansol": {
      "catalog-ref": "https://github.com/rodnansol/jbang-catalog/blob/HEAD/jbang-catalog.json",
      "description": "RodnanSol JBang Catalog"
    }
  },
  "aliases": {
    "hello": {
      "script-ref": "hello.java",
      "description": "Script that says hello back for each argument"
    }
  },
  "templates": {
    "q-aws-lambda": {
      "file-refs": {
        "{filename}": "aws/aws-lambda.java.qute",
        "application.properties": "aws/application.properties"
      },
      "description": "Quarkus AWS Lambda template",
      "properties": {
        "mode": {
          "description": "Quarkus Lambda mode: simple or funq",
          "default": "simple"
        }
      }
    },
    "q-aws-lambda-tf": {
      "file-refs": {
        "{filename}": "aws/aws-lambda.java.qute",
        "build-application": "aws/build-application",
        "application.properties": "aws/application.properties",
        "lambda-{basename}.tf": "aws/lambda.tf.qute"
      },
      "description": "Quarkus AWS Lambda template with Terraform template. Use the -Dnative-function flag to have native image based Terraform resources",
      "properties": {
        "mode": {
          "description": "Quarkus Lambda mode: simple or funq",
          "default": "simple"
        },
        "tf-providers": {
          "description": "If enabled extra Terraform related providers will be generated",
          "default": false
        },
        "tf-provider-aws-version": {
          "description": "Version of the AWS Terraform provider",
          "default": "3.71.0"
        },
        "tf-provider-archive-version": {
          "description": "Version of the Archive Terraform provider",
          "default": "2.2.0"
        },
        "tf-provider-null-version": {
          "description": "Version of the NULL Terraform provider",
          "default": "3.1.0"
        },
        "tf-provider-aws-region": {
          "description": "AWS Region",
          "default": "eu-central-1"
        },
        "aws-vpc-integration": {
          "description": "AWSLambdaVPCAccessExecutionRole will be added to the lambda function ",
          "default": false
        },
        "aws-lambda-logging": {
          "description": "If logging should be enabled or not",
          "default": false
        },
        "native-function": {
          "description": "Native executable based lambda or not",
          "default": false
        },
        "lambda-handler": {
          "description": "Lambda handler method's name. By default it will be decided by the 'mode' property, but could be overriden."
        }
      }
    },
    "q-aws-lambda-sqs": {
      "file-refs": {
        "{filename}": "aws/aws-lambda-sqs.java.qute",
        "application.properties": "aws/application.properties"
      },
      "description": "Quarkus AWS Lambda template with incoming SQS event",
      "properties": {
        "mode": {
          "description": "Quarkus Lambda mode: simple or funq",
          "default": "simple"
        }
      }
    },
    "q-aws-lambda-sqs-tf": {
      "file-refs": {
        "{filename}": "aws/aws-lambda-sqs.java.qute",
        "build-application": "aws/build-application",
        "application.properties": "aws/application.properties",
        "lambda-{basename}.tf": "aws/lambda.tf.qute"
      },
      "description": "Quarkus AWS Lambda template with incoming SQS event",
      "properties": {
        "mode": {
          "description": "Quarkus Lambda mode: simple or funq",
          "default": "simple"
        },
        "tf-providers": {
          "description": "If enabled extra Terraform related providers will be generated",
          "default": false
        },
        "tf-provider-aws-version": {
          "description": "Version of the AWS Terraform provider",
          "default": "3.71.0"
        },
        "tf-provider-archive-version": {
          "description": "Version of the Archive Terraform provider",
          "default": "2.2.0"
        },
        "tf-provider-null-version": {
          "description": "Version of the NULL Terraform provider",
          "default": "3.1.0"
        },
        "tf-provider-aws-region": {
          "description": "AWS Region",
          "default": "eu-central-1"
        },
        "aws-vpc-integration": {
          "description": "AWSLambdaVPCAccessExecutionRole will be added to the lambda function ",
          "default": false
        },
        "aws-lambda-logging": {
          "description": "If logging should be enabled or not",
          "default": false
        },
        "aws-sqs-enabled": {
          "description": "If SQS queue should be created or not",
          "default": true
        },
        "native-function": {
          "description": "Native executable based lambda or not",
          "default": false
        },
        "lambda-handler": {
          "description": "Lambda handler method's name. By default it will be decided by the 'mode' property, but could be overriden."
        }
      }
    },
    "q-aws-lambda-s3": {
      "file-refs": {
        "{filename}": "aws/aws-lambda-s3.java.qute",
        "application.properties": "aws/application.properties"
      },
      "description": "Quarkus AWS Lambda template with incoming S3 event",
      "properties": {
        "mode": {
          "description": "Quarkus Lambda mode: simple or funq",
          "default": "simple"
        }
      }
    },
    "q-aws-lambda-s3-tf": {
      "file-refs": {
        "{filename}": "aws/aws-lambda-s3.java.qute",
        "application.properties": "aws/application.properties",
        "build-application": "aws/build-application",
        "lambda-{basename}.tf": "aws/lambda.tf.qute"
      },
      "description": "Quarkus AWS Lambda template with incoming S3 event",
      "properties": {
        "mode": {
          "description": "Quarkus Lambda mode: simple or funq",
          "default": "simple"
        },
        "tf-providers": {
          "description": "If enabled extra Terraform related providers will be generated",
          "default": false
        },
        "tf-provider-aws-version": {
          "description": "Version of the AWS Terraform provider",
          "default": "3.71.0"
        },
        "tf-provider-archive-version": {
          "description": "Version of the Archive Terraform provider",
          "default": "2.2.0"
        },
        "tf-provider-null-version": {
          "description": "Version of the NULL Terraform provider",
          "default": "3.1.0"
        },
        "tf-provider-aws-region": {
          "description": "AWS Region",
          "default": "eu-central-1"
        },
        "aws-vpc-integration": {
          "description": "AWSLambdaVPCAccessExecutionRole will be added to the lambda function ",
          "default": false
        },
        "aws-lambda-logging": {
          "description": "If logging should be enabled or not",
          "default": false
        },
        "native-function": {
          "description": "Native executable based lambda or not",
          "default": false
        },
        "lambda-handler": {
          "description": "Lambda handler method's name. By default it will be decided by the 'mode' property, but could be overriden."
        }
      }
    },
    "q-aws-lambda-ecs-event-tf": {
      "file-refs": {
        "{filename}": "aws/aws-lambda-ecs-event.java.qute",
        "application.properties": "aws/application.properties",
        "build-application": "aws/build-application",
        "lambda-{basename}.tf": "aws/lambda.tf.qute"
      },
      "description": "Quarkus AWS Lambda template to handle ECS event",
      "properties": {
        "mode": {
          "description": "Quarkus Lambda mode: simple or funq",
          "default": "simple"
        },
        "tf-providers": {
          "description": "If enabled extra Terraform related providers will be generated",
          "default": false
        },
        "tf-provider-aws-version": {
          "description": "Version of the AWS Terraform provider",
          "default": "3.71.0"
        },
        "tf-provider-archive-version": {
          "description": "Version of the Archive Terraform provider",
          "default": "2.2.0"
        },
        "tf-provider-null-version": {
          "description": "Version of the NULL Terraform provider",
          "default": "3.1.0"
        },
        "tf-provider-aws-region": {
          "description": "AWS Region",
          "default": "eu-central-1"
        },
        "aws-vpc-integration": {
          "description": "AWSLambdaVPCAccessExecutionRole will be added to the lambda function "
        },
        "aws-lambda-logging": {
          "description": "If logging should be enabled or not"
        },
        "aws-ecs-event-change-capture": {
          "description": "If ECS event change capture should be included in Terraform scripts",
          "default": true
        },
        "native-function": {
          "description": "Native executable based lambda or not",
          "default": false
        },
        "lambda-handler": {
          "description": "Lambda handler method's name. By default it will be decided by the 'mode' property, but could be overriden."
        }
      }
    }
  }
}
